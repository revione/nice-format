// identifyWordType.js - Versi√≥n mejorada

import {
  articles,
  prepositions,
  pronouns,
  conjunctions,
  adverbs,
  commonNouns,
  infinitiveVerbs,
  basicAdjectives,
  declinedAdjectives,
  adjectivesEndingInT,
  adjectivesEndingInEn,
  specialCases,
} from "./WordTypes.js";

import { nonGermanWords } from "./nonGermanWords.js";

export const identifyWordType = (word) => {
  // Limpiar la palabra antes del an√°lisis
  word = word.toLowerCase().trim();

  // Eliminar caracteres no alfab√©ticos al inicio y final
  word = word.replace(/^[^\w\s√§√∂√º√ü√°√©√≠√≥√∫√º√±√ß]+|[^\w\s√§√∂√º√ü√°√©√≠√≥√∫√º√±√ß]+$/g, "");

  // Si la palabra est√° vac√≠a despu√©s de limpiar, retornar other
  if (!word || word.length < 1) return "other";

  if (nonGermanWords.includes(word.toLowerCase())) return "foreign";

  // 1. Verificar casos especiales PRIMERO
  if (specialCases[word]) return specialCases[word];

  // 2. Verificar listas espec√≠ficas (orden de prioridad)
  if (articles.includes(word)) return "article";
  if (prepositions.includes(word)) return "preposition";
  if (pronouns.includes(word)) return "pronoun";
  if (conjunctions.includes(word)) return "conjunction";
  if (adverbs.includes(word)) return "adverb";
  if (commonNouns.includes(word)) return "noun";
  if (infinitiveVerbs.includes(word)) return "verb";
  if (basicAdjectives.includes(word)) return "adjective";
  if (declinedAdjectives.includes(word)) return "adjective";

  // 3. PATRONES PARA SUSTANTIVOS (verificar ANTES que adjetivos)
  const nounPatterns = [
    /ung$/, // Zeichnung, Erkl√§rung
    /heit$/, // Freiheit, Sch√∂nheit
    /keit$/, // M√∂glichkeit, Schwierigkeit
    /schaft$/, // Freundschaft, Wissenschaft
    /chen$/, // diminutivos: M√§dchen, H√§uschen
    /lein$/, // diminutivos: Fr√§ulein
    /tion$/, // Information, Situation
    /it√§t$/, // Universit√§t, Qualit√§t
    /ismus$/, // Kapitalismus, Tourismus
    /ling$/, // Lehrling, Schmetterling
    /nis$/, // Erlebnis, Geheimnis
    /tum$/, // Christentum, Eigentum
    /in$/, // Lehrerin, √Ñrztin (femenino)
    /b√ºschel$/, // haarb√ºschel, fellb√ºschel
    /ecke$/, // leseecke
    /zimmer$/, // wohnzimmer, esszimmer
    /ausdruck$/, // gesichtsausdruck, ausdruck
    /ausdr√ºcke$/, // gesichtsausdr√ºcke
    /finger$/, // zeigefinger
    /schuhe$/, // absatzschuhe
    /tasche$/, // umh√§ngetasche
    /fl√§che$/, // farbfl√§che
    /grund$/, // untergrund, hintergrund
    /teil$/, // k√∂rperteil
    /winkel$/, // mundwinkel
    /symbol$/, // herzsymbol
    /foto$/, // originalfoto
    /werb$/, // wettbewerb
  ];

  // Verificar sustantivos por patrones
  for (let pattern of nounPatterns) {
    if (pattern.test(word)) return "noun";
  }

  // Si empieza con may√∫scula, probablemente es sustantivo (pero no aplicar aqu√≠ porque ya viene en min√∫sculas)

  // 4. PATRONES PARA VERBOS CONJUGADOS
  const verbPatterns = [
    /ieren$/, // studieren, funktionieren
    /eln$/, // sammeln, wandeln
    /ern$/, // √§ndern, f√∂rdern
    /igen$/, // best√§tigen, besch√§ftigen
    /√üe$/, // genie√üe
    /ege$/, // zerleg-e (forma informal)
    /che$/, // mache, wasche, abwasche
    /ne$/, // zeichne, nenne, kenne
    /fe$/, // helfe
    /ue$/, // freue
  ];

  // Verificar verbos por patrones espec√≠ficos
  for (let pattern of verbPatterns) {
    if (pattern.test(word)) return "verb";
  }

  // Formas verbales conjugadas (con exclusiones mejoradas)
  if (word.endsWith("t") && word.length > 2) {
    // Excluir adjetivos comunes que terminan en -t
    if (!adjectivesEndingInT.includes(word)) {
      return "verb";
    }
  }

  if (word.endsWith("st") && word.length > 3) {
    return "verb"; // 2da persona singular: machst, gehst
  }

  if (word.endsWith("en") && word.length > 3) {
    // Verificar si no es un adjetivo declinado com√∫n
    if (!adjectivesEndingInEn.includes(word)) {
      return "verb";
    }
  }

  if (word.endsWith("te") && word.length > 3) {
    return "verb"; // pret√©rito: machte, ging
  }

  if (word.endsWith("et") && word.length > 3) {
    return "verb"; // participio: gemacht, gelernt
  }

  // 5. PATRONES PARA ADJETIVOS ALEMANES (DESPU√âS de verificar verbos)
  const adjectivePatterns = [
    /lich$/, // freundlich, h√∂flich, ehrlich, gem√ºtlich, heimelig
    /ig$/, // wichtig, richtig, ruhig, zottelig, wuschelig
    /isch$/, // typisch, praktisch, logisch
    /ell$/, // hell, schnell, aktuell, visuell, visuelles
    /sch$/, // frisch, falsch, deutsch
    /los$/, // arbeitslos, hilflos, sinnlos
    /voll$/, // hoffnungsvoll, sinnvoll, wertvoll, voller
    /frei$/, // fehlerfrei, sorgenfrei, kostenfrei
    /reich$/, // erfolgreich, hilfreich, abwechslungsreich
    /arm$/, // ideenarm, phantasiearm, vitaminarm
    /m√ºde$/, // lebensm√ºde, kriegsm√ºde
    /bereit$/, // hilfsbereit, einsatzbereit
    /w√ºrdig$/, // vertrauensw√ºrdig, sehensw√ºrdig
    /f√§hig$/, // arbeitsf√§hig, lernf√§hig
    /bar$/, // sichtbar, h√∂rbar, essbar
    /sam$/, // aufmerksam, langsam, sparsam
    /haft$/, // ernsthaft, dauerhaft, fehlerhaft
    /end$/, // einladend (pero verificar que no sea participio)
    /elig$/, // zottelig, wuschelig
    /ige$/, // zottelige, wuschelige
    /iges$/, // zotteliges
    /icher$/, // bildhafter
    /ere$/, // dickere, k√ºrzere
    /les$/, // visuelles, einfaches, soziales
    /rer$/, // besonderer, √ºberraschter
    /che$/, // typische, positive, wilde (cuando no es verbo)
  ];

  // Verificar adjetivos por patrones
  for (let pattern of adjectivePatterns) {
    if (pattern.test(word)) {
      // Excepci√≥n especial para palabras que terminan en -che y podr√≠an ser verbos
      if (word.endsWith("che")) {
        const verbsEndingInChe = [
          "mache",
          "wasche",
          "abwasche",
          "spreche",
          "breche",
        ];
        if (verbsEndingInChe.includes(word)) {
          return "verb";
        }
      }
      return "adjective";
    }
  }

  // 6. PATRONES ADICIONALES PARA CAPTURAR M√ÅS CASOS

  // Detectar n√∫meros (d√≠gitos)
  if (/^\d+$/.test(word)) {
    return "number";
  }

  // Detectar n√∫meros ordinales alemanes
  if (word.endsWith("te") || word.endsWith("ter") || word.endsWith("tes")) {
    const base = word.replace(/(te|ter|tes)$/, "");
    if (
      base.length > 0 &&
      (base === "ers" || base === "zwei" || base === "drit" || /\d/.test(base))
    ) {
      return "number";
    }
  }

  // Sustantivos compuestos comunes
  if (
    word.includes("zimmer") ||
    word.includes("ecke") ||
    word.includes("b√ºschel") ||
    word.includes("ausdruck") ||
    word.includes("finger") ||
    word.includes("schuhe") ||
    word.includes("tasche") ||
    word.includes("fl√§che") ||
    word.includes("grund") ||
    word.includes("teil") ||
    word.includes("winkel") ||
    word.includes("symbol") ||
    word.includes("foto") ||
    word.includes("werb")
  ) {
    return "noun";
  }

  // Adjetivos con prefijos comunes
  if (word.startsWith("un") && word.length > 3) {
    const baseWord = word.substring(2);
    if (
      basicAdjectives.includes(baseWord) ||
      declinedAdjectives.includes(baseWord)
    ) {
      return "adjective";
    }
  }

  // Si contiene caracter√≠sticas de adjetivos alemanes
  if (
    word.includes("sicht") || // unsichtbare
    word.includes("fach") || // einfache
    word.includes("techn") || // technische
    word.includes("visu") || // visuelle
    word.includes("eig") || // eigene
    word.includes("einz") || // einzelne
    word.includes("ganz") || // ganze (puede ser adjetivo o adverbio)
    word.includes("mitt") || // mittleres
    word.includes("sozi") || // soziales
    word.includes("pos") || // positive
    word.includes("typ") || // typische
    word.includes("wild") || // wilde
    word.includes("brech") || // zerbrechliches
    word.includes("fr√∂h") || // fr√∂hliches
    word.includes("t√§g") // t√§gliches
  ) {
    return "adjective";
  }

  // 7. CASOS ESPECIALES FINALES MEJORADOS

  // Palabras espec√≠ficas que no est√°n en las listas principales
  const additionalClassifications = {
    // Sustantivos espec√≠ficos
    verb: "noun", // cuando se refiere al concepto gramatical
    gras: "noun", // hierba/c√©sped
    bescheid: "noun", // aviso/informaci√≥n

    // N√∫meros en alem√°n
    f√ºnf: "number",

    // Palabras compuestas o espec√≠ficas del contexto
    hubsan: "noun", // marca/nombre propio
  };

  if (additionalClassifications[word]) {
    return additionalClassifications[word];
  }

  // Verificaci√≥n final para palabras muy cortas que podr√≠an ser abreviaciones de verbos
  if (word.length <= 4) {
    const shortVerbForms = {
      sag: "verb",
      geb: "verb",
      leg: "verb", // de zerlegen
      zeich: "verb", // de zeichnen (forma abreviada)
      sprich: "verb", // imperativo
    };

    if (shortVerbForms[word]) {
      return shortVerbForms[word];
    }
  }

  // Si llegamos aqu√≠, clasificar como "other"
  return "other";
};

export const WORD_TYPES = {
  VERB: { id: "verb", color: "#e74c3c", emoji: "üî¥", label: "verbo" },
  NOUN: { id: "noun", color: "#3498db", emoji: "üîµ", label: "sustantivo" },
  ARTICLE: { id: "article", color: "#f39c12", emoji: "üü°", label: "art√≠culo" },
  ADJECTIVE: {
    id: "adjective",
    color: "#ff9500",
    emoji: "üü†",
    label: "adjetivo",
  },
  PRONOUN: { id: "pronoun", color: "#00d084", emoji: "üü¢", label: "pronombre" },
  PREPOSITION: {
    id: "preposition",
    color: "#9b59b6",
    emoji: "üü£",
    label: "preposici√≥n",
  },
  CONJUNCTION: {
    id: "conjunction",
    color: "#8b4513",
    emoji: "üü§",
    label: "conjunci√≥n",
  },
  ADVERB: { id: "adverb", color: "#8a2be2", emoji: "üü™", label: "adverbio" },
  NUMBER: { id: "number", color: "#17a2b8", emoji: "üî¢", label: "n√∫mero" },
  FOREIGN: {
    id: "foreign",
    color: "#ff6b6b",
    emoji: "üåç",
    label: "extranjero",
  },
  OTHER: { id: "other", color: "#95a5a6", emoji: "‚ö´", label: "otra" },
  AMBIGUOUS: {
    id: "ambiguous",
    color: "#ff6b35",
    emoji: "üî∂",
    label: "ambigua",
  },
};
